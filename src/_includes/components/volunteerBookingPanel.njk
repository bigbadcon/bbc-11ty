{# x-data="eventInfo" on event page #}

{# Only show if event has yet to happen #}
{% if not event.eventStartDateTime | isAfterDate %}
    <!-- ----------------------- Volunteer Registration Form ---------------------- -->
    {# Show if they are logged in and do not yet have a user role of volunteer #}
    <section class="text-sm italic rounded-md shadow mt-md text-body p-base bg-card" 
    x-show="isAuth && !isVolunteer && (maxSpaces === 'Any' || $store.events.spaces[id] > 0)"
    x-data="volunteerSignup"
    x-init="if (!isVolunteer) {getUserData()}"
    >
        <header class="prose">
            <h2 id="signup">Volunteer Registration Form</h2>
            <p>You must first register as a volunteer in order to sign up for a volunteer shift.</p>
        </header>
        <form x-cloak x-show="isAuth && submittingState !== 'complete'"
            method="POST" 
            name="volunteer-signup" 
            class="prose"
            id="volunteer-signup" 
            @submit.prevent="submit($validate.value($el))" x-validate
            x-init="$watch('submittingState', val => {if (val === 'complete') getUserData()})"
            >
            <p class="hidden">
                <label>Don't fill this out if you're human: <input name="bot-field"/></label>
            </p>
            <input type="hidden" id="displayName" name="displayName" value="" :value="user && user.displayName" x-validate>
            <input type="hidden" id="userEmail" name="userEmail" value="" :value="user && user.userEmail" x-validate>
            <input type="hidden" id="userNicename" name="userNicename" value="" :value="user && user.userNicename" x-validate>
            <input type="hidden" id="userId" name="userId" value="" :value="user && user.id" x-validate>
            <input type="hidden" id="formName" name="formName" value="volunteer-signup">
            <input type="hidden" id="eventId" name="eventId" value="{{event.eventId}}" x-validate>
            <input type="hidden" id="eventName" name="eventName" value="{{event.eventName}}" x-validate>
            <p>
                <span class="font-bold text-highlight">*</span>
                <em>required field</em>
            </p>
            <fieldset>
                <legend>Personal Info</legend>
                <div class="prose">
                    <strong>Name:</strong>
                    <span x-text="user && user.displayName"></span></div>
                <div class="required">
                    <label for="yourAge">
                                    Your age at start of con:
                                    <span>
                            {% include "components/date-range.njk" %}
                        </span>
                    </label>
                    <select id="yourAge" name="yourAge" required>
                        <option disabled selected>-- Choose One --</option>
                        <option>13+</option>
                        <option>18+</option>
                    </select>
                </div>
                <div class="required" >
                    <label for="phone">Phone</label>
                    <input id="phone" name="phone" type="tel" value="" required/>
                </div>
                <div>
                    <label for="discord">Discord Handle</label>
                    <input id="discord" name="discord" type="text" value=""/>
                </div>
                <div>
                    <label for="otherInfo">Other info we should know</label>
                    <textarea cols="30" id="otherInfo" name="otherInfo" rows="3" ></textarea>
                </div>
            </fieldset>
            <p>Big Bad Con is committed to cultivating a culture of respect, support, and kindness at both our in-person and online events. We ask that all of our attendees agree to abide by our Community Standards, please take a moment to read them before answering yes below.</p>
            <p>
                <a href="/community-standards" class="icon-scroll">Community Standards</a>
            </p>
            <fieldset>
                <legend>Community Standards Agreement</legend>
                <div class="flex flex-wrap items-center required">
                    <input type="checkbox" id="communityStandards" name="communityStandards" value="Yes" required >
                    <label for="communityStandards">
                        Yes &mdash; I, <span x-text="user && user.displayName" class="font-bold"></span>, agree to the Big Bad Con Community Standards
                    </label>
                    <div class="error-msg basis-full pt-sm">Required</div>
                </div>
            </fieldset>
            <div x-show="submittingState === 'unsubmitted'">
                <button type="submit" :disabled="!$validate.isComplete('volunteer-signup')">Submit</button>
            </div>
            <div x-show="submittingState === 'submitted'">
                {% import 'components/loading-spinner-macro.njk' as loading %}
                {{ loading.spinner('Submitting')}}
            </div>
            {# x-validate form log #}
            {% if (sitemeta.environment === 'dev') %}
                {% import 'components/x-validate-form-validator.njk' as validate %}
                {{ validate.log('volunteer-signup') }}
            {% endif %}
        </form>

        {# You are signed up notification. Show only when signed up and logged in.  #}
        <div x-cloak x-show="isAuth && submittingState === 'complete'" class="prose">
            <h3>Thank you for signing up as a volunteer!</h3>
            <p>Head on over to our <a href="/volunteer-shifts">Volunteer Shifts</a> page and book a shift!</p>
        </div>
    </section>
    {# End of volunteer registration form #}

    <!-- ----------------------- Volunteer Registration Form Script ---------------------- -->
    <script type="text/javascript">

        document.addEventListener('alpine:init', () => {

            Alpine.data('volunteerSignup', function () {
                return {
                    submittingState: 'unsubmitted', // State Machine: unsubmitted, submitted, complete
                    async submit(data) {
                        // Check network status and data service status
                        const status = await lilRed.status(20, 5000, 1.05);
                        if (!status) 
                            return false;
                        
                        this.submittingState = "submitted"

                        console.log("submit", data)
                        this.submitForm(data)
                    },
                    async submitForm(submitData) {
                        // TODO: add fetch POST to serverless function
                        const options = {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json;charset=utf-8'
                            },
                            body: JSON.stringify(submitData)
                        }

                        const url = "/.netlify/functions/volunteer-signup"

                        try {
                            let response = await fetch(url, options)
                            console.log(`RESPONSE:fetch for ${url}`, response)
                            if (response.status !== 200) 
                                throw `fetch fail status: ${response.status}`
                            let result = await response.text()
                            console.log(`RESULT:fetch for ${url}`, result)
                            if (result) {
                                this.submittingState = 'complete';
                                this.$dispatch('get-user-data');
                                this.$dispatch('get-booked-events');
                            }
                            return result
                        } catch (err) {
                            console.error(`ERROR:fetch for ${url}`, err)
                            this.$dispatch("toast", "ERROR: could not register as volunteer. Try again or contact info@bigbadcon.com for help.")
                            this.submittingState = 'unsubmitted'
                            return false
                        }
                    }
                }
            })
        })
    </script>
{% endif %}

{# Booking Panel #}
<div class="rounded-md shadow mt-md text-body p-base bg-card">
    <h2 class="-mt-1 font-serif text-2xl font-bold leading-none md:text-4xl text-header mb-sm">Volunteer Signup</h2>
    {# Event Name, spaces open, and list of players; only show if logged in and has event data #}
    <div x-cloak x-show="isAuth" class="flex flex-col gap-sm">
        {% include 'components/event-date.njk' %}
        {% include 'components/event-spaces.njk' %}

        <div x-cloak x-show="bookings && bookings.length">
            <h4 class="font-serif text-2xl font-semibold">Volunteer List</h4>
            <ul class="list-disc pl-md">
                <template x-for="booking in bookings">
                    <li class="mb-xs" x-text="booking && booking.user.displayName"></li>
                </template>
            </ul>
        </div>
        {% if sitemeta.context === 'dev' or sitemeta.context === 'branch-deploy' %}
            {# DEV AREA #}
            <div class="border-2 border-header p-sm" x-show="doesEventOverlap('{{event.eventStartDateTime}}', {{event.eventDuration}})" class="italic rounded bg-card p-sm">
                <p>The timing of this event overlaps with one of your booked events.</p>
            </div>
        {% endif %}
    </div>
    {# Message for people not logged in #}
    <div x-cloak x-show="!isAuth">
        You must be <button @click="modal = 'Login'" class="underline text-highlight">logged in</button> to sign up for a volunter shift.
    </div>

    {# Show if logged in and volunteer #}
    <div x-show="isAuth && isVolunteer" class="pt-base">
        {# Show if there are spaces and not booked #}
        <div x-show="(maxSpaces === 'Any' || $store.events.spaces[id] > 0) && !isBooked({{event.eventId}})">
            <button class="button" x-show="!doesEventOverlap('{{event.eventStartDateTime}}', {{event.eventDuration}})" @click="bookEvent({{event.eventId}})">Volunteer</button>
        </div>
        {# Show if event full#}
        <div x-show="!(maxSpaces === 'Any' || $store.events.spaces[id] > 0)" class="font-bold rounded bg-card p-sm mb-xs">Shift is full</div>
        {# Show if booked #}
        <div x-show="isBooked({{event.eventId}})">
            <button class="button" @click="cancelBooking({{event.eventId}})">Cancel Shift</span>
        </div>
    </div>
</div>